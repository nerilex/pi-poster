%!PS PostScript document
%%DocumentMedia: a4 595 842 0 () ()
%%Orientation: Portrait

% author:  bg nerilex
% email:   bg@nerilex.org
% date:    2017-09-17
% license: GPLv3 

%    Copyright (C) 2008 - 2017 bg nerilex
%
%    This program is free software: you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation, either version 3 of the License, or
%    (at your option) any later version.
%
%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program.  If not, see <http://www.gnu.org/licenses/>.

/starttime usertime def

systemdict /runlibfile known not {
	/runlibfile /run cvx def
} if

currentdict /__trigo_inc_ps__ known not {
	(trigo.inc.ps) runlibfile
} if

currentdict /__paper_inc_ps__ known not {
	(paper.inc.ps) runlibfile
} if

currentdict /__aux_inc_ps__ known not {
	(aux.inc.ps) runlibfile
} if

(cheat_hex.ps) runlibfile


currentdict /pi_hex_digit known not {
	(pi-bbp-int-core.inc.ps) runlibfile
} if



0 1 1 index 30 add {
	dup dup
	pi_hex_digit 
	xprint
	0 eq { (.) print } if
	dup 0 ne exch
	10 mod 0 eq and { (\n  ) print } if
} for

papersize
= =

false {
newpath
papersize % x y
4 div exch 4 div exch moveto
papersize % x y
4 div 3 mul exch 4 div exch lineto
papersize % x y
4 div 3 mul exch 4 div 3 mul exch lineto
papersize % x y
4 div exch 4 div 3 mul exch lineto
closepath
} if

true {
newpath
0 0 moveto
papersize % x y
pop 0 lineto
papersize % x y
lineto
papersize % x y
exch pop 0 exch lineto
closepath
} if


/margin 40 def
/Courier findfont
25 scalefont
setfont

/xdist (x) stringwidth pop def
/ydist 30 1 mul def
/yoff 50 def
/ypos ydist 1 mul def



/a 1.2 def
% move  (0, 0) into the center of the page
/digit_idx 0 def
/phi 0 def
/ypos ydist 1 mul def

/rmax 
	papersize  % x y
	dup mul exch dup % y**2 x**2
	mul add sqrt 2 div  % rmax=sqrt(x**2 + y**2)
	def

/limit rmax ypos sub ydist div 1 add 
%	360 div 
%	2 mul 3.1415926 mul 
	dup mul 
	xdist mul 2 div 
	def

limit =
flush

/visible {
	currentpoint infill
	currentpoint exch xdist add exch infill
	or
} def

papersize 2 div exch 2 div exch translate

0 ypos moveto


0
{
	% c
	dup 1 add exch
	0 ypos moveto
	visible
	{
		pi_hex_digit
		16 5 string cvrs % ypos' phi' idx' ("digit")
		dup
		show
	} {
		pop
		(x)
	} ifelse
	stringwidth % wx wy
	pop
%	(wy:) print = dup (wx:) print =
%	(ypos:) print ypos =
	ypos div arcsin
%	(alpha:) print dup =
	dup -1 mul rotate
	ydist mul 360 div ypos add /ypos exch def
	ypos ydist sub rmax ge { exit } if
%	currentpoint
%	0 0 moveto
%	(x) show
%	moveto
} loop

(computed ) print = ( digits\n) print

(execution took ) print usertime starttime sub = ( milliseconds\n) print

%/bits_per_int dbgP
%/SHIFT dbgP
%/papersize dbgP
%20 string cvs (printed ) print print (digits) print

showpage

%prompt
